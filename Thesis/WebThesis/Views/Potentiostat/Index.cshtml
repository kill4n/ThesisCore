@using WebThesis.DAL
@using WebThesis.Models
@model PotenciostatoModel
@{
    ViewData["Title"] = "Potenciostato";
    DALHelper helperDAL = new DALHelper();
}


<div class="container">
    <div class="col justify-content-center">
        <div class="row text-center align-items-center ">
            <div class="col-2 ">
                <input class="btn btn-secondary btn-block" type="submit" value="Regresar" />
            </div>
            <div class="col-8">
                <h5>Potenciostato</h5>
            </div>
            <div class="col-2 align-middle">
                <span class="badge rounded-pill bg-success " style="display: block;">Success</span>
            </div>
        </div>

        <div class="row">
            @using (Html.BeginForm("Potenciostato", "Home", FormMethod.Post, new { @class = "col-lg-2" }))
            {<div class="form-group ">
                    @Html.LabelFor(model => model.StartPoint)
                    @Html.TextBoxFor(model => model.StartPoint, new { @type = "number", step = "0.001", @class = "form-control" })
                    @Html.LabelFor(model => model.FirstVertex)
                    @Html.TextBoxFor(model => model.FirstVertex, new { @type = "number", step = "0.001", @class = "form-control" })
                    @Html.LabelFor(model => model.SecondVertex)
                    @Html.TextBoxFor(model => model.SecondVertex, new { @type = "number", step = "0.001", @class = "form-control" })
                    @Html.LabelFor(model => model.ZeroCrosses)
                    @Html.TextBoxFor(model => model.ZeroCrosses, new { @type = "number", step = "0.001", @class = "form-control" })
                    @Html.LabelFor(model => model.ScanRate)
                    @Html.TextBoxFor(model => model.ScanRate, new { @type = "number", step = "0.001", @class = "form-control" })
                </div>
                <input class="btn btn-primary btn-block" type="submit" value="Enviar" />
            }

            <div class="col-10">
                <div class="row">
                    <div id="chart"></div>
                </div>
                <div class="row">
                    <table class="table table-dark ">
                        <tr>
                            <th> Usuario</th>
                            <th> Fecha</th>
                            <th> Descripcion</th>
                        </tr>
                        @foreach (Data item in Model.DataPotentiostat)
                        {
                            <tr>
                                <td>
                                    @{WriteLiteral(((User)helperDAL.GetUser(item.IdUser)).UserName);}
                                </td>
                                <td>
                                    @item.DateRun
                                </td>
                                <td>
                                    @item.Description
                                </td>
                            </tr>
                        }
                    </table>

                </div>
            </div>
        </div>
    </div>
</div>

<style>
    label {
        display: block;
        margin: .5em 0 0 0;
    }
</style>


@section Scripts
{
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

    <script type="text/javascript">
        // Load the Visualization API and the corechart package.
        google.charts.load('current', { 'packages': ['corechart'] });

        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(drawChart);

        // Callback that creates and populates a data table,
        // instantiates the pie chart, passes in the data and
        // draws it.
        function drawChart() {

            // Create the data table.

            var data = new google.visualization.DataTable();
            data.addColumn('number', '');
            data.addColumn('number', 'First rep');
            data.addRows([
                [1, 3],
                [2, 1],
                [3, 2],
                [4, 3],
                [2, 1],
                [1, 1],
                [4, 1],
                [3, 3],
                [2, 2]
            ]);

            // Set chart options
            var options = {
                title: 'Electrochemical test',
                curveType: 'function',
                width: 800,
                height: 400
            };

            // Instantiate and draw our chart, passing in some options.

            var chart = new google.visualization.ScatterChart(document.getElementById('chart'));
            chart.draw(data, options);
        }</script>
}
